@using EtAndHkIde.Infrastructure
@model EtAndHkIde.Infrastructure.PageMetadata
@{
    var citationIcons = new Dictionary<CitationType, string>
{
{CitationType.Undefined, ""},
{CitationType.Book, "<i class=\"fas fa-book mr-1\"></i>"},
{CitationType.Magazine, "<i class=\"fas fa-book-open mr-1\"></i>"},
{CitationType.Newspaper, "<i class=\"far fa-newspaper mr-1\"></i>"},
{CitationType.Pdf, "<i class=\"fa fa-file-pdf mr-1\"></i>"},
{CitationType.Website, "<i class=\"fas fa-external-link-square-alt mr-1\"></i>"}
};
}
<p>
    @if (Model.IsHighlight)
    {
        <i class="fas fa-star mr-1" title="Highlight page"></i>
    }
    @Model.Description
</p>
<p>Published @Model.PublishDate?.ToShortDateString()</p>
@if (Model.Citation != null)
{
    <p>
        <a href="@Html.Raw(Model.Citation.Url)" target="_blank">
            @Html.Raw(citationIcons[Model.Citation.Type])
            @Html.Raw(Model.Citation.Name)
            @if (Model.Citation.Description.HasValue())
            {
                <br />@Model.Citation.Description
            }
        </a>
    </p>
}
<div class="card">
    <div class="card-body">
        <h5 class="card-title">Tags</h5>
        <ul class="list-group list-group-flush">
            @foreach (var tag in Model.Tags)
            {
                <li class="list-group-item">
                    <a asp-page="/Tags" asp-route-tag="@tag.NormalizedName">
                        <i class="@tag.TagType.Icon mr-1 tag-type"></i>@tag.Name
                    </a>
                </li>
            }
        </ul>
    </div>
</div>
